generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String               @id @default(uuid())
  email         String               @unique
  passwordHash  String?
  name          String?
  role          Role                 @default(USER)
  avatarUrl     String?
  oauthProvider String?
  oauthId       String?
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  addresses     Address[]
  orders        Order[]
  resetTokens   ResetPasswordToken[]
}

model Address {
  id         String   @id @default(uuid())
  userId     String
  label      String?
  fullName   String
  phone      String
  line1      String
  line2      String?
  city       String
  state      String
  postalCode String
  country    String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Order {
  id         String      @id @default(uuid())
  userId     String
  items      Json
  totalPrice Float
  status     OrderStatus @default(PENDING)
  paymentId  String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
}

model ResetPasswordToken {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id              String         @id @default(uuid())
  title           String
  slug            String         @unique
  description     String?
  shortDesc       String?
  price           Float
  discountedPrice Float?
  sku             String?        @unique
  stockQuntity    Int            @default(0)
  categoryId      String?
  brand           String?
  tags            String?
  images          String?        // JSON array of image URLs
  status          ProductStatus  @default(DRAFT)
  isActive        Boolean        @default(true)
  weight          Float?
  dimensions      String?        // JSON object for dimensions { length, width, height }
  createdBy       Int?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  publishedAt     DateTime?
  featuredAt      DateTime?
  metaTitle       String?
  metaDescription String?
}


enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum Role {
  USER
  ADMIN
}

enum ProductStatus {
  DRAFT
  NORMAL
  FEATURE
}
